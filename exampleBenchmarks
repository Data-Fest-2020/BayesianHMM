
import numpy as np
import sklearn
import pandas as pd
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
import matplotlib.pyplot as plt



# just run line 16-26 and 82-89

########### Example1 - Electric Screwdriver ###########

########## HMM; smooth0
data = pd.read_csv('C:/Users/schep/OneDrive/Desktop/DataFest/Results/y_electric_screwdriver_HMM_70001_smooth0.csv') 


data = pd.DataFrame(data)

data = data.dropna()

#data = data.iloc[0:1000]

y_hat = data.loc[: , "y_hat"]
y_true = data.loc[: , "y_true"]

#y_hat = y_hat.iloc[14000:15000]
#y_true = y_true.iloc[14000:15000]

# some summeries
#data.y_hat.value_counts() 
#data.y_true.value_counts()

#pd.crosstab(index=df['y_hat'], columns=df['y_true'])


# F1-Score, Precision, Recall

precRec = classification_report(y_true, y_hat, output_dict=True)
precRec = pd.DataFrame(precRec).to_latex()



# confusion-matrix
cm = confusion_matrix(y_hat, y_true)
cm = pd.DataFrame(cm).to_latex()
# confusion-matrix


# sliding window
y_hat = y_hat.astype('float')
y_hat = y_hat+0.1

y_true = y_true.astype('float')


import math
math.ceil(4.2)

num_plots = math.ceil(df.y_hat.count() / 5000)
num_plots = num_plots.astype('category')


i = 0
m = 5000

for s in range(num_plots): 
    plt.plot(y_true[i:m],'bo', markersize=0.5, label = "y_true")
    plt.plot(y_hat[i:m],'ro', markersize=0.5, label = "y_hat")
    plt.legend(loc="upper right")
    plt.show() 
    i = i + 5000
    m = m + 5000

#plt.savefig("plot", dpi= 300)



# range-based precision, recall, f1-score
y_hat = y_hat-0.1
y_hat = np.array(y_hat)
y_hat = y_hat.astype('int')

y_true = np.array(y_true)
y_true = y_true.astype('int')


results = TSMetric(metric_option="time-series", alpha_r=0.2, cardinality="reciprocal", bias_p="flat", bias_r="flat").score(y_true, y_hat)
